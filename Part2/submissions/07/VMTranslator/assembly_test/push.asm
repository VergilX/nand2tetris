// push constant i
@5 // replace with i value
D=A
@0 // replace with SP
A=M // Go to memory address SP
M=D // Push value
@0 // Replace with SP
M=M+1

// ---------------------------------------------------------------------------------------

// push local i
@1 // LCL
D=M
@2 // i
A=A+D
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push argument i
@2 // ARG
D=M
@2 // i
A=A+D
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push this i
@3 // THIS
D=M
@2 // i
A=A+D
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push that i
@2 // THAT
D=M
@2 // i
A=A+D
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push temp i
@5 // temp has constant base address 5
D=A
@2 // i
A=A+D
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push pointer 0
@3 // THIS
A=M
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push pointer 1
@4 // THAT
A=M
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1 // SP++

// ---------------------------------------------------------------------------------------

// push static i
// Starts with address 16
@15 // <file.i>
D=M
@0 // SP
A=M
M=D
@0 // SP
M=M+1
