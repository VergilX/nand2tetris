// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux (in=load, sel=address[11], a=a0, b=a1);

    DMux (in=a0, sel=address[10], a=b0, b=b1);
    DMux (in=a1, sel=address[10], a=b2, b=b3);

    DMux (in=b0, sel=address[9], a=r0, b=r1);
    DMux (in=b1, sel=address[9], a=r2, b=r3);
    DMux (in=b2, sel=address[9], a=r4, b=r5);
    DMux (in=b3, sel=address[9], a=r6, b=r7);

    RAM512 (in=in, load=r0, address=address[0..8], out=o0);
    RAM512 (in=in, load=r1, address=address[0..8], out=o1);
    RAM512 (in=in, load=r2, address=address[0..8], out=o2);
    RAM512 (in=in, load=r3, address=address[0..8], out=o3);
    RAM512 (in=in, load=r4, address=address[0..8], out=o4);
    RAM512 (in=in, load=r5, address=address[0..8], out=o5);
    RAM512 (in=in, load=r6, address=address[0..8], out=o6);
    RAM512 (in=in, load=r7, address=address[0..8], out=o7);

    Mux16 (a=o0, b=o1, sel=address[9], out=c0);
    Mux16 (a=o2, b=o3, sel=address[9], out=c1);
    Mux16 (a=o4, b=o5, sel=address[9], out=c2);
    Mux16 (a=o6, b=o7, sel=address[9], out=c3);

    Mux16 (a=c0, b=c1, sel=address[10], out=d0);
    Mux16 (a=c2, b=c3, sel=address[10], out=d1);

    Mux16 (a=d0, b=d1, sel=address[11], out=out);
}
